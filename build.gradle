apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'bintray'
apply plugin: 'artifactory'

group = "com.odobo.filestorage"
version = "0.1.0-SNAPSHOT"
description = "Karman implementation of Rackspace API"

ext.isSnapshot = version.endsWith('SNAPSHOT')

buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/jfrog/jfrog-jars' }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.2.3'
    }
}

repositories {
    jcenter()
    maven { url 'http://dl.bintray.com/karman/karman' }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.2.2'
    compile 'com.bertramlabs.plugins:karman-core:0.1.1'
    //compile "org.apache.jclouds.provider:cloudfiles-uk:1.7.1"
    compile 'org.apache.jclouds.api:cloudfiles:1.7.1'
}

sourceSets {
    main.groovy.srcDir 'src'
    test.groovy.srcDir 'test'
}

publishing {
    publications {
        groovyMaven(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {

    user = bintrayUser
    key = bintrayKey
    publications = ['groovyMaven']

    def projectName = project.name
    def projectDescription = project.description

    pkg {
        repo = 'karman'
        userOrg = 'karman'
        name = projectName      // somehow project.* doesn't work in this closure
        desc = projectDescription
        licenses = ['Apache-2.0']
    }
    dryRun = false // whether to run this as dry-run, without deploying
}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
}

artifactoryPublish { task ->
    artifactory {
        publish {
            repository {
                repoKey = isSnapshot ? 'oss-snapshot-local' : 'oss-release-local'

                // Need this to enable non deployment builds without credentials
                gradle.taskGraph.whenReady { taskGraph ->
                    if (taskGraph.hasTask(task)) {
                        username = bintrayUser
                        password = bintrayKey
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

bintrayUpload.dependsOn jar, sourcesJar, javadocJar

configurations {
    published
}

artifactoryPublish.dependsOn sourcesJar, javadocJar

artifacts {
    published sourcesJar
    published javadocJar
}

